<Window x:Class="WhereAreThem.WinViewer.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:p="clr-namespace:PureLib.WPF.BusyControl;assembly=PureLib.WPF"
        xmlns:m="clr-namespace:WhereAreThem.Model.Models;assembly=WhereAreThem.Model"
        xmlns:vc="clr-namespace:WhereAreThem.WinViewer.ValueConverter"
        Title="WhereAreThem WinViewer" Height="400" Width="600" WindowState="Maximized" Icon="/WhereAreThem.WinViewer;component/Resources/WhereIsIt.ico">
    <Window.Resources>
        <ContextMenu x:Key="watMenu">
            <MenuItem Header="Locate on disk" CommandParameter="{Binding}"
                      Command="{Binding VM.LocateOnDiskCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
            <MenuItem Header="Copy" CommandParameter="{Binding}"
                      Command="{Binding VM.CopyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
            <MenuItem Header="Scan" CommandParameter="{Binding}"
                      Command="{Binding VM.ScanCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
            <MenuItem Header="Exclude" CommandParameter="{Binding}"
                      Command="{Binding VM.ExcludeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
            <MenuItem Header="Properties" CommandParameter="{Binding}"
                      Command="{Binding VM.OpenPropertiesCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
        </ContextMenu>
        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{x:Static SystemColors.HighlightColor}" />
        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{x:Static SystemColors.HighlightTextColor}" />
        <Style x:Key="NavigationButton" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Margin" Value="0,0,4,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Back" Command="{Binding GoBackCommand}" />
    </Window.InputBindings>

    <p:BusyIndicator IsBusy="{Binding IsBusy}" BusyContent="{Binding BusyContent}">
        <Grid Margin="6">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>

            <TreeView Name="treeView" ItemsSource="{Binding Computers}" TreeViewItem.Selected="FolderTreeSelected" TreeViewItem.Expanded="FolderTreeExpanded" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <EventSetter Event="PreviewMouseRightButtonDown" Handler="FolderTreeMouseRightClick" />
                        <Setter Property="ContextMenu" Value="{StaticResource watMenu}" />
                        <Setter Property="Margin" Value="2" />
                    </Style>
                </TreeView.ItemContainerStyle>

                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type m:Folder}" ItemsSource="{Binding Folders}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding Converter={StaticResource IconConverter}}"/>
                            <TextBlock Text="{Binding Name}" Padding="2,0" />
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
            </TreeView>

            <GridSplitter Grid.Column="0" Grid.RowSpan="2" Width="4" ResizeDirection="Columns" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>

            <Grid Grid.Column="1" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <Button Content="←" Command="{Binding GoBackCommand}" Style="{StaticResource NavigationButton}" />
                    <Button Content="→" Command="{Binding GoForwardCommand}" Style="{StaticResource NavigationButton}" />
                    <Button Content="↑" Command="{Binding GoUpCommand}" Style="{StaticResource NavigationButton}" />
                </StackPanel>

                <TextBox Text="{Binding Location}" Grid.Column="1" Margin="0" IsReadOnly="True" VerticalContentAlignment="Center" />
            </Grid>

            <DataGrid ItemsSource="{Binding ItemsInSelectedFolder}" vc:MultiSelectorBehaviours.SynchronizedSelectedItems="{Binding SelectedItems}" Grid.Column="1" Grid.Row="1" Margin="0,4,0,22"
                  MouseDoubleClick="DataGridMouseDoubleClick" SelectionChanged="DataGridSelectionChanged" CopyingRowClipboardContent="DataGridCopyingRowClipboardContent" Sorting="DataGridSorting"
                  IsReadOnly="True" AutoGenerateColumns="False" SelectionMode="Extended" SelectionUnit="FullRow" CanUserAddRows="False" CanUserDeleteRows="False" GridLinesVisibility="None">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="ContextMenu" Value="{StaticResource watMenu}" />
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Name" SortMemberPath="Name">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding Converter={StaticResource IconConverter}}"/>
                                    <TextBlock Text="{Binding Name}" Margin="2,0,0,0" />
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Size" SortMemberPath="Size">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Size, Converter={StaticResource SizeConverter}}" HorizontalAlignment="Right" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Created" Binding="{Binding CreatedDate, StringFormat={}{0:yyyy/MM/dd HH:mm:ss}}" SortMemberPath="CreatedDate"/>
                    <DataGridTextColumn Header="Modified" Binding="{Binding ModifiedDate, StringFormat={}{0:yyyy/MM/dd HH:mm:ss}}" SortMemberPath="ModifiedDate"/>
                </DataGrid.Columns>
            </DataGrid>

            <StatusBar Grid.Column="1" Grid.Row="1" VerticalAlignment="Bottom">
                <StatusBarItem Content="{Binding StatusBarText}" />
            </StatusBar>
        </Grid>
    </p:BusyIndicator>
</Window>
